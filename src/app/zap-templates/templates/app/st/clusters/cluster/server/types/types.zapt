{{!-- > header --}}
{{#chip_server_clusters}}
{{!-- #if (isStrEqual name "On/Off") --}}
{{#zcl_enums}}
SOURCE_FILE_PATH=st/matter/generated/zap_clusters/{{asUpperCamelCase ../name}}/types/{{asUpperCamelCase name}}.lua
{{> header}}
-- Copyright 2022 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

local data_types = require "st.matter.data_types"
local UintABC = require "st.matter.data_types.base_defs.UintABC"

--- @class st.matter.generated.zap_clusters.{{asUpperCamelCase ../name}}.types.{{asUpperCamelCase name}}: st.matter.data_types.Uint8
--- @alias {{asUpperCamelCase name}}
---
--- @field public byte_length number 1
{{#zcl_enum_items}}
--- @field public {{as_underscore_uppercase name}} number {{value}}
{{/zcl_enum_items}}

local{{asUpperCamelCase name}} = {}
local new_mt = UintABC.new_mt({NAME = "{{asUpperCamelCase name}}", ID = data_types.name_to_id_map["Uint8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
{{#zcl_enum_items}}
    [self.{{as_underscore_uppercase name}}] = "{{as_underscore_uppercase name}}",
{{/zcl_enum_items}}    
  }
  return string.format("%s: %s, ID %d", self.NAME or self.field_name, name_lookup[self.value] or string.format("%d", self.value), self.field_id)
end
new_mt.__tostring = new_mt.__index.pretty_print

{{#zcl_enum_items}}
new_mt.__index.{{as_underscore_uppercase name}}{{ident}}= {{asHex value 2}}
{{/zcl_enum_items}}    

setmetatable({{asUpperCamelCase name}}, new_mt)

return {{asUpperCamelCase name}}

{{/zcl_enums}}
{{!-- /if --}}
{{/chip_server_clusters}}